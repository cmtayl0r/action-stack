/*
================================================================================
OVERLAY
================================================================================
*/

.modal__overlay {
  /* Fixed positioning for full viewport coverage */
  position: fixed;
  inset: 0;
  z-index: 50;

  /* Flexbox centering for modal */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Backdrop styling */
  background-color: var(--surface-scrim, rgba(0, 0, 0, 0.5));
  backdrop-filter: blur(4px);
}

/*
================================================================================
CORE STRUCTURE
================================================================================
*/

.modal {
  /* Reset dialog defaults */
  border: none;
  padding: 0;
  margin: 0;

  /* Styling */
  background-color: var(--surface-page);
  border-radius: var(--border-radius-xl);
  border: var(--border-width-default) solid var(--border-faint);

  /* Flexible layout */
  display: flex;
  flex-direction: column;
  position: relative;

  /* Prevent modal from exceeding viewport */
  max-height: calc(100vh - 2rem);
  max-width: calc(100vw - 2rem);
  overflow: hidden;

  /* Focus outline */
  outline: none;
}

/* Starting style for modal entrance */
@starting-style {
  .modal {
    transform: scale(0.95);
    opacity: 0;
  }
}

/* The Dialog component from React Aria wraps your content */
.modal .react-aria-Dialog {
  display: flex;
  flex-direction: column;
  height: 100%;
  outline: none;
}

.modal__header {}

.modal__title {}

.modal__body {}

.modal__footer {
  display: flex;
  justify-content: flex-end;
}



.modal__close-button {
  position: absolute;
  top: var(--space-xl);
  right: var(--space-xl);
  z-index: 10;
}

/*
================================================================================
MODAL HERO
================================================================================
*/

.modal__hero {
  aspect-ratio: 16/9;
  width: 100%;
  position: relative;
  overflow: hidden;
}

.modal__hero img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

/*
================================================================================
SIZE VARIANTS
================================================================================
*/

.modal--sm {
  width: min(100% - var(--space-xl, 1.5rem), 32rem);
  padding: var(--space-xl,
      1.5rem);
}

.modal--md {
  /*
    width is 100% of the viewport width minus 4.8rem (2.4rem padding on each side)
    or 40rem, whichever is smaller
  */
  width: min(100% - var(--space-xl, 1.5rem), 48rem);
  padding: var(--space-xl,
      1.5rem);
}

.modal--lg {
  width: min(100% - var(--space-xl, 1.5rem), 64rem);
  padding: var(--space-xl, 1.5rem);
}

.modal--full {
  width: 100vw;
  height: 100vh;
  max-width: none;
  max-height: none;
  border-radius: 0;
  transform: none;
  top: 0;
  left: 0;
  padding: var(--space-xl, 1.5rem);
}

/*
================================================================================
RESPONSIVE BEHAVIOUR
================================================================================
*/

@media (max-width: 768px) {

  /*
  TODO: This class approach seems inefficient for responsive behavior
  I've used .modal[open] because it doesn't work (display properly) without it
  */
  .modal[open].modal--sm,
  .modal[open].modal--md,
  .modal[open].modal--lg {
    /* Full screen on mobile for better UX */
    width: 100vw;
    height: 100vh;
    max-width: none;
    max-height: none;
    border-radius: 0;
    transform: none;
    top: 0;
    left: 0;
    inset-block-start: 0;
    inset-inline-start: 0;
  }

  .modal__wrapper {
    max-height: 100vh;
    max-width: 100vw;
  }

  .modal__body {
    /* padding: var(--space-md); */
  }
}
